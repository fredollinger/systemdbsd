/*
 * Generated by gdbus-codegen 2.40.0. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __TIMEDATED_GEN_H__
#define __TIMEDATED_GEN_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.freedesktop.timedate1 */

#define TIMEDATED_TYPE_ (timedated__get_type ())
#define TIMEDATED_(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TIMEDATED_TYPE_, Timedated))
#define TIMEDATED_IS_(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TIMEDATED_TYPE_))
#define TIMEDATED__GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TIMEDATED_TYPE_, TimedatedIface))

struct _Timedated;
typedef struct _Timedated Timedated;
typedef struct _TimedatedIface TimedatedIface;

struct _TimedatedIface
{
  GTypeInterface parent_iface;


  gboolean (*handle_set_local_rtc) (
    Timedated *object,
    GDBusMethodInvocation *invocation,
    gboolean arg_local_rtc,
    gboolean arg_fix_system,
    gboolean arg_user_interaction);

  gboolean (*handle_set_ntp) (
    Timedated *object,
    GDBusMethodInvocation *invocation,
    gboolean arg_use_ntp,
    gboolean arg_user_interaction);

  gboolean (*handle_set_time) (
    Timedated *object,
    GDBusMethodInvocation *invocation,
    gint64 arg_usec_utc,
    gboolean arg_relative,
    gboolean arg_user_interaction);

  gboolean (*handle_set_timezone) (
    Timedated *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_timezone,
    gboolean arg_user_interaction);

  gboolean  (*get_local_rtc) (Timedated *object);

  gboolean  (*get_ntp) (Timedated *object);

  const gchar * (*get_timezone) (Timedated *object);

};

GType timedated__get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *timedated__interface_info (void);
guint timedated__override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void timedated__complete_set_time (
    Timedated *object,
    GDBusMethodInvocation *invocation);

void timedated__complete_set_timezone (
    Timedated *object,
    GDBusMethodInvocation *invocation);

void timedated__complete_set_local_rtc (
    Timedated *object,
    GDBusMethodInvocation *invocation);

void timedated__complete_set_ntp (
    Timedated *object,
    GDBusMethodInvocation *invocation);



/* D-Bus method calls: */
void timedated__call_set_time (
    Timedated *proxy,
    gint64 arg_usec_utc,
    gboolean arg_relative,
    gboolean arg_user_interaction,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean timedated__call_set_time_finish (
    Timedated *proxy,
    GAsyncResult *res,
    GError **error);

gboolean timedated__call_set_time_sync (
    Timedated *proxy,
    gint64 arg_usec_utc,
    gboolean arg_relative,
    gboolean arg_user_interaction,
    GCancellable *cancellable,
    GError **error);

void timedated__call_set_timezone (
    Timedated *proxy,
    const gchar *arg_timezone,
    gboolean arg_user_interaction,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean timedated__call_set_timezone_finish (
    Timedated *proxy,
    GAsyncResult *res,
    GError **error);

gboolean timedated__call_set_timezone_sync (
    Timedated *proxy,
    const gchar *arg_timezone,
    gboolean arg_user_interaction,
    GCancellable *cancellable,
    GError **error);

void timedated__call_set_local_rtc (
    Timedated *proxy,
    gboolean arg_local_rtc,
    gboolean arg_fix_system,
    gboolean arg_user_interaction,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean timedated__call_set_local_rtc_finish (
    Timedated *proxy,
    GAsyncResult *res,
    GError **error);

gboolean timedated__call_set_local_rtc_sync (
    Timedated *proxy,
    gboolean arg_local_rtc,
    gboolean arg_fix_system,
    gboolean arg_user_interaction,
    GCancellable *cancellable,
    GError **error);

void timedated__call_set_ntp (
    Timedated *proxy,
    gboolean arg_use_ntp,
    gboolean arg_user_interaction,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean timedated__call_set_ntp_finish (
    Timedated *proxy,
    GAsyncResult *res,
    GError **error);

gboolean timedated__call_set_ntp_sync (
    Timedated *proxy,
    gboolean arg_use_ntp,
    gboolean arg_user_interaction,
    GCancellable *cancellable,
    GError **error);



/* D-Bus property accessors: */
const gchar *timedated__get_timezone (Timedated *object);
gchar *timedated__dup_timezone (Timedated *object);
void timedated__set_timezone (Timedated *object, const gchar *value);

gboolean timedated__get_local_rtc (Timedated *object);
void timedated__set_local_rtc (Timedated *object, gboolean value);

gboolean timedated__get_ntp (Timedated *object);
void timedated__set_ntp (Timedated *object, gboolean value);


/* ---- */

#define TIMEDATED_TYPE__PROXY (timedated__proxy_get_type ())
#define TIMEDATED__PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TIMEDATED_TYPE__PROXY, TimedatedProxy))
#define TIMEDATED__PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TIMEDATED_TYPE__PROXY, TimedatedProxyClass))
#define TIMEDATED__PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TIMEDATED_TYPE__PROXY, TimedatedProxyClass))
#define TIMEDATED_IS__PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TIMEDATED_TYPE__PROXY))
#define TIMEDATED_IS__PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TIMEDATED_TYPE__PROXY))

typedef struct _TimedatedProxy TimedatedProxy;
typedef struct _TimedatedProxyClass TimedatedProxyClass;
typedef struct _TimedatedProxyPrivate TimedatedProxyPrivate;

struct _TimedatedProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  TimedatedProxyPrivate *priv;
};

struct _TimedatedProxyClass
{
  GDBusProxyClass parent_class;
};

GType timedated__proxy_get_type (void) G_GNUC_CONST;

void timedated__proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
Timedated *timedated__proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
Timedated *timedated__proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void timedated__proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
Timedated *timedated__proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
Timedated *timedated__proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TIMEDATED_TYPE__SKELETON (timedated__skeleton_get_type ())
#define TIMEDATED__SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TIMEDATED_TYPE__SKELETON, TimedatedSkeleton))
#define TIMEDATED__SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TIMEDATED_TYPE__SKELETON, TimedatedSkeletonClass))
#define TIMEDATED__SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TIMEDATED_TYPE__SKELETON, TimedatedSkeletonClass))
#define TIMEDATED_IS__SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TIMEDATED_TYPE__SKELETON))
#define TIMEDATED_IS__SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TIMEDATED_TYPE__SKELETON))

typedef struct _TimedatedSkeleton TimedatedSkeleton;
typedef struct _TimedatedSkeletonClass TimedatedSkeletonClass;
typedef struct _TimedatedSkeletonPrivate TimedatedSkeletonPrivate;

struct _TimedatedSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  TimedatedSkeletonPrivate *priv;
};

struct _TimedatedSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType timedated__skeleton_get_type (void) G_GNUC_CONST;

Timedated *timedated__skeleton_new (void);


G_END_DECLS

#endif /* __TIMEDATED_GEN_H__ */
